version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 12

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION)
      - BUILD_NUMBER=$(echo $CODEBUILD_BUILD_NUMBER)
      - IMAGE_TAG_SPECIFIC=${COMMIT_HASH:=BUILD_NUMBER}
      - IMAGE_TAG=${IMAGE_TAG_SPECIFIC:=latest}
      - npm install

  build:
    commands:
      - docker images ls
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$BUILD_NUMBER
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$BUILD_NUMBER
      - echo Writing image definitions file...
      - printf '{"imageName":"%s","imageTag":"%s"}' $ECR_REPO_NAME $IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - "cloudformation/*"
  discard-paths: yes
